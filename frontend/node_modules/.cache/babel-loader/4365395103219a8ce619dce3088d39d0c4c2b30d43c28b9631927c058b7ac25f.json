{"ast":null,"code":"var _jsxFileName = \"D:\\\\web development\\\\React.js\\\\React Complete Guide\\\\Authentication App\\\\frontend\\\\src\\\\pages\\\\Error.js\",\n  _s = $RefreshSig$();\nimport { useRouteError } from 'react-router-dom';\nimport PageContent from '../components/PageContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ErrorPage() {\n  _s();\n  // 使用 useRouteError() 钩子获取路由错误信息\n  const error = useRouteError();\n  let title = 'An error occurred!'; // 默认错误标题\n  let message = 'Something went wrong!'; // 默认错误消息\n\n  // 根据错误状态码设置不同的标题和消息\n  if (error.status === 500) {\n    message = error.data.message; // 获取服务器返回的错误消息\n  }\n  if (error.status === 404) {\n    title = 'Not found!'; // 资源未找到的标题\n    message = 'Could not find resource or page.'; // 资源未找到的消息\n  }\n\n  // 渲染页面内容组件，显示错误标题和消息\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PageContent, {\n      title: title,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(ErrorPage, \"oAgjgbJzsRXlB89+MoVumxMQqKM=\", false, function () {\n  return [useRouteError];\n});\n_c = ErrorPage;\nexport default ErrorPage;\nvar _c;\n$RefreshReg$(_c, \"ErrorPage\");","map":{"version":3,"names":["useRouteError","PageContent","jsxDEV","_jsxDEV","Fragment","_Fragment","ErrorPage","_s","error","title","message","status","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/web development/React.js/React Complete Guide/Authentication App/frontend/src/pages/Error.js"],"sourcesContent":["import { useRouteError } from 'react-router-dom';\n\nimport PageContent from '../components/PageContent';\n\nfunction ErrorPage() {\n  // 使用 useRouteError() 钩子获取路由错误信息\n  const error = useRouteError();\n\n  let title = 'An error occurred!'; // 默认错误标题\n  let message = 'Something went wrong!'; // 默认错误消息\n\n  // 根据错误状态码设置不同的标题和消息\n  if (error.status === 500) {\n    message = error.data.message; // 获取服务器返回的错误消息\n  }\n\n  if (error.status === 404) {\n    title = 'Not found!'; // 资源未找到的标题\n    message = 'Could not find resource or page.'; // 资源未找到的消息\n  }\n\n  // 渲染页面内容组件，显示错误标题和消息\n  return (\n    <>\n      <PageContent title={title}>\n        <p>{message}</p>\n      </PageContent>\n    </>\n  );\n}\n\nexport default ErrorPage;\n\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB;EACA,MAAMC,KAAK,GAAGR,aAAa,CAAC,CAAC;EAE7B,IAAIS,KAAK,GAAG,oBAAoB,CAAC,CAAC;EAClC,IAAIC,OAAO,GAAG,uBAAuB,CAAC,CAAC;;EAEvC;EACA,IAAIF,KAAK,CAACG,MAAM,KAAK,GAAG,EAAE;IACxBD,OAAO,GAAGF,KAAK,CAACI,IAAI,CAACF,OAAO,CAAC,CAAC;EAChC;EAEA,IAAIF,KAAK,CAACG,MAAM,KAAK,GAAG,EAAE;IACxBF,KAAK,GAAG,YAAY,CAAC,CAAC;IACtBC,OAAO,GAAG,kCAAkC,CAAC,CAAC;EAChD;;EAEA;EACA,oBACEP,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACEV,OAAA,CAACF,WAAW;MAACQ,KAAK,EAAEA,KAAM;MAAAI,QAAA,eACxBV,OAAA;QAAAU,QAAA,EAAIH;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACd,CAAC;AAEP;AAACV,EAAA,CAzBQD,SAAS;EAAA,QAEFN,aAAa;AAAA;AAAAkB,EAAA,GAFpBZ,SAAS;AA2BlB,eAAeA,SAAS;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}